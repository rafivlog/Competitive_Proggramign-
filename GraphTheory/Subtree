vector<int> adj[1010],euler;
int depth[1010],parent[1010],in[1010],out[1010],cn=0,n;
void dfs(int src,int par)
{
	euler.push_back(src);
	in[src] = cn;
	cn++;
	for(int i=0;i<adj[src].size();i++){
		if(adj[src][i]!=par){
			dfs(adj[src][i],src);
		}
	}
	euler.push_back(src);
	out[src] = cn;
	cn++;
}
void solve()
{
	cin>>n;
	for(int i=0;i<n-1;i++){
		int u,v;
		cin>>u>>v;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	dfs(1,-1);
	for(int i=0;i<euler.size();i++){
		cout<<euler[i]<<sp;
	}
	cout<<endl;
	for(int i=1;i<=n;i++){
		cout<<i<<" -> "<<in[i]<<sp<<out[i]<<endl;
	}
	//eache node sub_tree__(out[i]-in[i]+1)/2
}

/**/




vector<int> adj[1010],euler;
int sub_tree[1010],n;
void dfs(int src,int par)
{
	sub_tree[src] = 1;
	for(int i=0;i<adj[src].size();i++){
		if(adj[src][i]!=par){
			dfs(adj[src][i],src);
			sub_tree[src]+=sub_tree[adj[src][i]];
		}
	}
}
void solve()
{
	cin>>n;
	for(int i=0;i<n-1;i++){
		int u,v;
		cin>>u>>v;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	dfs(1,-1);
	for(int i=1;i<=n;i++){
		cout<<sub_tree[i]<<sp;
	}
}
problem link CF -   https://codeforces.com/contest/1336/problem/A
sol -     https://pastebin.com/duvfFNMV
