#include<bits/stdc++.h>
using namespace std;
vector<int> adj[1000001];
int vis[1000001];
int dist[1000001];
int level[1000001];
void BFS(int src)
{
    queue<int>q;
    q.push(src);
    vis[src] = 1;
    dist[src] = 0;
    while(!q.empty())
    {
        int curr = q.front();
        q.pop();
        for(int child : adj[curr])
        {
            if(vis[child]==0)
            {
                dist[child] = dist[curr]+1;
                q.push(child);
                vis[child] = 1;
                level[dist[child]]++;
            }
        }
    }
}
int main()
{
    int t,n,m,x,y;

    cin>>n>>m;
    for(int i=0; i<m; i++)
    {
        cin>>x>>y;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    cin>>t;
    while(t--)
    {
        int s,d;
        cin>>s>>d;
        for(int i=0; i<=n; i++)
        {
            level[i] =0;
            vis[i] =0;
        }
        BFS(s);
        cout<<level[d]<<endl;
    }



    return 0;
}
/*

9 10
1 2
2 3
1 7
2 4
3 4
4 7
7 8
9 7
7 6
5 6
3
4 2
5 3
2 1*/








